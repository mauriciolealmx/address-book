{"version":3,"sources":["components/Contacts/Contacts.config.js","components/Contacts/Contacts.styles.js","components/Contacts/Contacts.jsx","components/GetUsers.jsx","components/CreateContact.jsx","components/Login.jsx","components/Register.jsx","components/Header/Header.styles.js","components/Header/Header.jsx","components/DeleteContact.jsx","App.styles.js","App.jsx","serviceWorker.js","index.js"],"names":["Contacts_config","width","flexGrow","label","dataKey","Contacts_styles","paperRoot","style","$debugName","marginTop","height","tableBodyRoot","maxHeight","table","minWidth","fontFamily","tableCell","flex","tableRow","cursor","flexContainer","display","alignItems","boxSizing","tableRowHover","&:hover","backgroundColor","noClick","VirtualizedTable","headerHeight","rowHeight","handleRowClick","rowData","console","log","getRowClassName","_ref","index","_this$props","_this","props","rowClassName","onRowClick","classNames","styles","Object","defineProperty","cellRenderer","_ref2","cellData","_ref2$columnIndex","columnIndex","isNumeric","columnsConfig","numeric","react_default","a","createElement","TableCell_default","className","component","variant","headerRenderer","_ref3","columns","_this2","this","map","_ref4","other","objectWithoutProperties","es","assign","key","headerProps","objectSpread","_this3","contacts","_ref5","rowCount","length","rowGetter","_ref6","columnRendered","React","PureComponent","Contacts","Paper_default","Contacts_VirtualizedTable","getUserContacts","userJwtToken","userId","axios","get","concat","then","res","data","catch","err","error","message","Component","textField","root","marginLeft","button","margin","initialState","contactEmail","contactLastName","contactName","CreateContact","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","feedbackMessage","handleSubmit","bind","assertThisInitialized","_this$state","updateContacts","contact","email","toLowerCase","firstName","capitalize","lastName","token","post","createContact","setState","e","target","value","TextField_default","classes","onChange","event","handleChange","Button_default","color","onClick","password","isValidEmail","test","user","_this2$props","updateToken","updateUserId","_res$data","split","getEmailId","successMessage","autoComplete","fullWidth","type","Register","serverError","name","createAccount","_this$state2","noValidate","grow","menuButton","marginRight","ButtonAppBar","AppBar_default","position","Toolbar_default","isLoggedIn","Typography_default","logOut","DeleteContact","put","deleteContact","App_styles","padding","userContacts","signIn","App","cloneDeep","createSignInToggle","jwtToken","prevState","hasContacts","Header","Fragment","CreateContact_CreateContact","DeleteContact_DeleteContact","Login_CreateContact","CardContent_default","Register_Register","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3510d0f8.chunk.js","sourcesContent":["export default [\n  {\n    width: 200,\n    flexGrow: 1,\n    label: 'Contact',\n    dataKey: 'firstName',\n  },\n  {\n    width: 120,\n    flexGrow: 1,\n    label: 'Name',\n    dataKey: 'firstName',\n  },\n  {\n    width: 120,\n    flexGrow: 1,\n    label: 'Last',\n    dataKey: 'lastName',\n  },\n  {\n    width: 120,\n    flexGrow: 1,\n    label: 'Email',\n    dataKey: 'email',\n  },\n];\n","import { style } from 'typestyle';\n\nexport default {\n  paperRoot: style({\n    $debugName: 'root',\n    marginTop: 1 * 3,\n    height: 400,\n    width: 900,\n  }),\n\n  tableBodyRoot: style({\n    maxHeight: '50px',\n  }),\n\n  table: style({\n    $debugName: 'table',\n    minWidth: 700,\n    fontFamily: 'auto', // has a theme\n  }),\n\n  tableCell: style({\n    flex: 1,\n  }),\n\n  tableRow: style({\n    cursor: 'pointer',\n  }),\n\n  flexContainer: style({\n    display: 'flex',\n    alignItems: 'center',\n    boxSizing: 'border-box',\n  }),\n\n  tableRowHover: style({\n    '&:hover': {\n      backgroundColor: '#eef1ff', // has a theme\n    },\n  }),\n\n  noClick: style({\n    cursor: 'initial',\n  }),\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { AutoSizer, Column, Table } from 'react-virtualized';\n\nimport Paper from '@material-ui/core/Paper';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport columnsConfig from './Contacts.config';\nimport styles from './Contacts.styles';\n\nclass VirtualizedTable extends React.PureComponent {\n  headerHeight = 56;\n  rowHeight = 56;\n\n  handleRowClick = rowData => {\n    console.log(rowData);\n  };\n\n  getRowClassName = ({ index }) => {\n    const { rowClassName, onRowClick } = this.props;\n    // Hover color will only show if rows have a onRowClick callback.\n    return classNames(styles.tableRow, styles.flexContainer, rowClassName, {\n      [styles.tableRowHover]: index !== -1 && this.handleRowClick,\n    });\n  };\n\n  cellRenderer = ({ cellData, columnIndex = null }) => {\n    const { onRowClick } = this.props;\n    const isNumeric = (columnIndex && columnsConfig[columnIndex].numeric) || false;\n    return (\n      <TableCell\n        className={classNames(styles.tableCell, styles.flexContainer, { [styles.noClick]: onRowClick == null })}\n        component=\"div\"\n        numeric={isNumeric}\n        style={{ height: this.rowHeight }}\n        variant=\"body\"\n      >\n        {cellData}\n      </TableCell>\n    );\n  };\n\n  headerRenderer = ({ label, columnIndex }) => {\n    const isNumeric = (columnIndex && columnsConfig[columnIndex].numeric) || false;\n    return (\n      <TableCell\n        className={classNames(styles.tableCell, styles.flexContainer, styles.noClick)}\n        component=\"div\"\n        numeric={isNumeric}\n        style={{ height: this.headerHeight }}\n        variant=\"head\"\n      >\n        {label}\n      </TableCell>\n    );\n  };\n\n  columnRendered(columns) {\n    return columns.map(({ className, dataKey, ...other }, index) => (\n      <Column\n        key={dataKey}\n        headerRenderer={headerProps =>\n          this.headerRenderer({\n            ...headerProps,\n            columnIndex: index,\n          })\n        }\n        className={classNames(styles.flexContainer, className)}\n        cellRenderer={this.cellRenderer}\n        dataKey={dataKey}\n        {...other}\n      />\n    ));\n  }\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <AutoSizer>\n        {({ height, width }) => (\n          <Table\n            className={styles.table}\n            headerHeight={this.headerHeight}\n            height={height}\n            onRowClick={this.handleRowClick}\n            rowClassName={this.getRowClassName}\n            rowCount={contacts.length}\n            rowGetter={({ index }) => contacts[index]}\n            rowHeight={this.rowHeight}\n            width={width}\n          >\n            {this.columnRendered(columnsConfig)}\n          </Table>\n        )}\n      </AutoSizer>\n    );\n  }\n}\n\nexport default props => (\n  <Paper className={styles.paperRoot}>\n    <VirtualizedTable contacts={props.contacts} />\n  </Paper>\n);\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Button from '@material-ui/core/Button';\n\nimport Contacts from './Contacts/Contacts';\n\nexport function getUserContacts(userJwtToken, userId) {\n  return axios\n    .get(`/users/${userId}/contacts?token=${userJwtToken}`)\n    .then(res => res.data)\n    .catch(err => {\n      console.error(`Unable to get contact for ${userId}`, err.message);\n    });\n}\n\nexport default class GetUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userContacts: null,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    const { userJwtToken, userId } = this.props;\n    getUserContacts(userJwtToken, userId).then(res => {\n      this.setState({\n        userContacts: res.data,\n      });\n    });\n  }\n  \n  render() {\n    const { userContacts } = this.state;\n    return (\n      <div>\n        <Button\n          color=\"primary\"\n          onClick={this.handleSubmit}\n          variant=\"outlined\"\n          style={{\n            display: 'block',\n            margin: 'auto',\n          }}\n        >\n          Get Contacts\n        </Button>\n        {userContacts && <Contacts contacts={userContacts} />}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport capitalize from 'lodash/capitalize';\nimport { style } from 'typestyle';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { getUserContacts } from './GetUsers';\n\nconst styles = {\n  textField: {\n    root: style({\n      marginLeft: '20px',\n    }),\n  },\n\n  button: style({\n    display: 'block',\n    margin: 'auto',\n  }),\n};\n\nfunction createContact(userId, contact) {\n  return axios\n    .post(`/users/${userId}/contacts`, contact)\n    .then(res => res.data)\n    .catch(err => {\n      console.error(`Unable to create contact for ${userId}`, err.message);\n    });\n}\n\nconst initialState = {\n  contactEmail: '',\n  contactLastName: '',\n  contactName: '',\n};\n\nexport default class CreateContact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...initialState,\n      feedbackMessage: '',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    const { contactName, contactLastName, contactEmail } = this.state;\n    const { userJwtToken, userId, updateContacts } = this.props;\n\n    const contact = {\n      email: contactEmail.toLowerCase(),\n      firstName: capitalize(contactName),\n      lastName: capitalize(contactLastName),\n      token: userJwtToken,\n    };\n\n    createContact(userId, contact).then(contact => {\n      const { firstName } = contact;\n      const feedbackMessage = `User ${firstName} was added to ${userId}`;\n\n      getUserContacts(userJwtToken, userId).then(res => {\n        updateContacts(res);\n        this.setState({\n          ...initialState,\n        });\n      });\n\n      this.setState({\n        feedbackMessage,\n      });\n    });\n  }\n\n  handleChange(key, e) {\n    this.setState({\n      [key]: e.target.value,\n    });\n  }\n\n  render() {\n    const { feedbackMessage } = this.state;\n    return (\n      <div>\n        <form>\n          <TextField\n            classes={styles.textField}\n            label=\"Name\"\n            margin=\"normal\"\n            onChange={event => this.handleChange('contactName', event)}\n            value={this.state.contactName}\n          />\n          <TextField\n            classes={styles.textField}\n            label=\"Last Name\"\n            margin=\"normal\"\n            onChange={event => this.handleChange('contactLastName', event)}\n            value={this.state.contactLastName}\n          />\n          <TextField\n            classes={styles.textField}\n            label=\"Email Address\"\n            margin=\"normal\"\n            onChange={event => this.handleChange('contactEmail', event)}\n            value={this.state.contactEmail}\n          />\n          <Button color=\"primary\" onClick={this.handleSubmit} variant=\"outlined\" className={styles.button}>\n            Create Contact\n          </Button>\n        </form>\n        {feedbackMessage && <div>{feedbackMessage}</div>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport capitalize from 'lodash/capitalize';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { getUserContacts } from './GetUsers';\n\nconst getEmailId = email => email.split('@')[0];\n\nconst isValidEmail = email => {\n  const regex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return regex.test(email);\n};\n\nexport default class CreateContact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      isValidEmail: true,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    const { email, password } = this.state;\n\n    if (!isValidEmail(email)) {\n      this.setState({\n        isValidEmail: false,\n      });\n      return;\n    }\n\n    this.setState({\n      isValidEmail: true,\n    });\n\n    const user = {\n      email,\n      password,\n    };\n    axios\n      .post('/login', user)\n      .then(res => {\n        const { updateToken, updateUserId, updateContacts } = this.props;\n        const { token, email } = res.data;\n\n        const userId = capitalize(getEmailId(email));\n        updateToken(token);\n        updateUserId(userId);\n        getUserContacts(token, userId).then(res => {\n          updateContacts(res);\n        });\n\n        this.setState({\n          successMessage: `Assigned token: ${token} for ${email}`,\n        });\n      })\n      .catch(err => {\n        console.error(`Unable to login user ${email}`, err.message);\n      });\n  }\n\n  handleChange(key, e) {\n    this.setState({\n      [key]: e.target.value,\n    });\n  }\n\n  render() {\n    const { successMessage } = this.state;\n    return (\n      <div>\n        <form>\n          <TextField\n            autoComplete=\"email\"\n            fullWidth\n            label=\"Email\"\n            margin=\"normal\"\n            onChange={event => this.handleChange('email', event)}\n            type=\"email\"\n            value={this.state.email}\n          />\n          <TextField\n            autoComplete=\"current-password\"\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            onChange={event => this.handleChange('password', event)}\n            type=\"password\"\n            value={this.state.password}\n          />\n          <Button color=\"primary\" fullWidth onClick={this.handleSubmit} variant=\"outlined\">\n            SIGN IN\n          </Button>\n        </form>\n        {successMessage && <div>{successMessage}</div>}\n        {!this.state.isValidEmail && <div>Please Enter a valid Email address</div>}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nfunction createAccount(user) {\n  return axios\n    .post('/register', user)\n    .then(res => res.data)\n    .catch(err => console.error(`Could not register user: ${err}`));\n}\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      serverError: '',\n      successMessage: '',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(name, event) {\n    this.setState({\n      [name]: event.target.value,\n    });\n  }\n\n  handleSubmit() {\n    const { email, password } = this.state;\n    const user = { email, password };\n\n    createAccount(user)\n      .then(user => {\n        const { email } = user;\n        this.setState({\n          successMessage: `Registered user ${email}`,\n        });\n      })\n      .catch(err => {\n        const serverError = `Could not register user: ${err}`;\n        console.error(serverError);\n        this.setState({\n          serverError,\n        });\n      });\n  }\n\n  render() {\n    const { serverError, successMessage } = this.state;\n\n    return (\n      <div style={{ display: 'inline-block' }}>\n        <form noValidate autoComplete=\"off\">\n          <TextField\n            autoComplete=\"email\"\n            fullWidth\n            label=\"Email\"\n            margin=\"normal\"\n            onChange={event => this.handleChange('email', event)}\n            value={this.state.email}\n          />\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            onChange={event => this.handleChange('password', event)}\n            type=\"password\"\n            value={this.state.password}\n          />\n          <Button color=\"primary\" onClick={this.handleSubmit} variant=\"outlined\" fullWidth>\n            Submit\n          </Button>\n        </form>\n        {serverError && <div>{serverError}</div>}\n        {successMessage && (\n          <div>\n            <div>Thanks for registering</div>\n            <div>{successMessage}</div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","export const styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport { styles } from './Header.styles';\n\nfunction ButtonAppBar(props) {\n  const { userId } = props;\n  return (\n    <div style={styles.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {props.isLoggedIn && <Button color=\"inherit\">=</Button>}\n          <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\n            Address Book\n          </Typography>\n          {props.isLoggedIn && (\n            <div>\n              <Button onClick={props.logOut} color=\"inherit\">\n                {'Logout'}\n              </Button>\n              <Button color=\"inherit\">{userId}</Button>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default ButtonAppBar;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport capitalize from 'lodash/capitalize';\nimport { style } from \"typestyle\";\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport { getUserContacts } from './GetUsers';\n\nconst styles = {\n  textField: {\n    root: style({\n      marginLeft: '20px',\n    }),\n  },\n\n  button: style({\n    display: 'block',\n    margin: 'auto',\n  }),\n};\n\nfunction deleteContact(userId, contact) {\n  return axios\n    .put(`/users/${userId}/contacts`, contact)\n    .then(res => res.data)\n    .catch(err => {\n      console.error(`Unable to create contact for ${userId}`, err.message);\n    });\n}\n\nconst initialState = {\n  contactLastName: '',\n  contactName: '',\n  feedbackMessage: '',\n};\n\nexport default class DeleteContact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...initialState,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    const { contactName, contactLastName } = this.state;\n    const { userJwtToken, userId, updateContacts } = this.props;\n\n    const contact = {\n      firstName: capitalize(contactName),\n      lastName: capitalize(contactLastName),\n      token: userJwtToken,\n    };\n\n    deleteContact(userId, contact).then(res => {\n      getUserContacts(userJwtToken, userId).then(res => {\n        updateContacts(res);\n        this.setState({\n          ...initialState,\n        });\n      });\n    });\n  }\n\n  handleChange(key, e) {\n    this.setState({\n      [key]: e.target.value,\n    });\n  }\n\n  render() {\n    const { feedbackMessage } = this.state;\n    return (\n      <div>\n        <form>\n          <TextField\n            classes={styles.textField}\n            label=\"Name\"\n            margin=\"normal\"\n            onChange={event => this.handleChange('contactName', event)}\n            value={this.state.contactName}\n          />\n          <TextField\n            classes={styles.textField}\n            label=\"Last Name\"\n            margin=\"normal\"\n            onChange={event => this.handleChange('contactLastName', event)}\n            value={this.state.contactLastName}\n          />\n          <Button color=\"primary\" onClick={this.handleSubmit} variant=\"outlined\" className={styles.button}>\n            Delete Contact\n          </Button>\n        </form>\n        {feedbackMessage && <div>{feedbackMessage}</div>}\n      </div>\n    );\n  }\n}\n","import { style } from 'typestyle';\n\nexport default {\n  root: style({\n    width: 450,\n    height: 510,\n    boxSizing: 'border-box',\n    padding: '48px 40px 36px 40px'\n  }),\n};\n","import React, { Component } from 'react';\nimport cloneDeep from 'lodash/cloneDeep';\n\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport CreateContact from './components/CreateContact';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Header from './components/Header/Header';\nimport Contacts from './components/Contacts/Contacts';\nimport DeleteContact from './components/DeleteContact';\nimport './App.css';\n\nimport styles from './App.styles';\n\nconst initialState = {\n  userContacts: [],\n  userId: '',\n  userJwtToken: '',\n  signIn: true,\n};\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = cloneDeep(initialState);\n    this.createSignInToggle = this.createSignInToggle.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.updateContacts = this.updateContacts.bind(this);\n    this.updateToken = this.updateToken.bind(this);\n    this.updateUserId = this.updateUserId.bind(this);\n  }\n\n  updateToken(jwtToken) {\n    this.setState({\n      userJwtToken: jwtToken,\n    });\n  }\n\n  updateUserId(userId) {\n    this.setState({\n      userId,\n    });\n  }\n\n  updateContacts(userContacts) {\n    this.setState({\n      userContacts,\n    });\n  }\n\n  isLoggedIn() {\n    const { userJwtToken, userId } = this.state;\n    return userJwtToken && userId;\n  }\n\n  logOut() {\n    this.setState(cloneDeep(initialState));\n  }\n\n  createSignInToggle() {\n    this.setState(prevState => ({ signIn: !prevState.signIn }));\n  }\n\n  render() {\n    const { userJwtToken, userId, userContacts, signIn } = this.state;\n    const hasContacts = userContacts.length > 0;\n    const isLoggedIn = this.isLoggedIn();\n    return (\n      <div className=\"App\">\n        <Header userId={userId} isLoggedIn={this.isLoggedIn()} logOut={this.logOut} />\n        <div className=\"App-header\">\n          {isLoggedIn ? (\n            <React.Fragment>\n              <CreateContact userJwtToken={userJwtToken} userId={userId} updateContacts={this.updateContacts} />\n              <DeleteContact userJwtToken={userJwtToken} userId={userId} updateContacts={this.updateContacts} />\n            </React.Fragment>\n          ) : (\n            <Paper classes={{ root: styles.root }}>\n              {signIn ? (\n                <React.Fragment>\n                  <Typography component=\"h1\" variant=\"h5\" style={{ padding: '35px' }}>\n                    Sign in\n                  </Typography>\n                  <Login\n                    updateToken={this.updateToken}\n                    updateUserId={this.updateUserId}\n                    updateContacts={this.updateContacts}\n                  />\n                  <CardContent>\n                    <Button onClick={this.createSignInToggle} color=\"primary\">\n                      Create account\n                    </Button>\n                  </CardContent>\n                </React.Fragment>\n              ) : (\n                <React.Fragment>\n                  <Typography component=\"h1\" variant=\"h5\" style={{ padding: '35px' }}>\n                    Create account\n                  </Typography>\n                  <Register />\n                  <CardContent>\n                    <Button onClick={this.createSignInToggle} color=\"primary\">\n                      Sign In\n                    </Button>\n                  </CardContent>\n                </React.Fragment>\n              )}\n            </Paper>\n          )}\n          <hr />\n          {hasContacts && <Contacts contacts={userContacts} />}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}